'''OpenGL extension ARB.debug_output

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_debug_output'
_DEPRECATED = False
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = constant.Constant( 'GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB', 0x8242 )
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = constant.Constant( 'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB', 0x8243 )
GL_DEBUG_CALLBACK_FUNCTION_ARB = constant.Constant( 'GL_DEBUG_CALLBACK_FUNCTION_ARB', 0x8244 )
GL_DEBUG_CALLBACK_USER_PARAM_ARB = constant.Constant( 'GL_DEBUG_CALLBACK_USER_PARAM_ARB', 0x8245 )
GL_DEBUG_SOURCE_API_ARB = constant.Constant( 'GL_DEBUG_SOURCE_API_ARB', 0x8246 )
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = constant.Constant( 'GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB', 0x8247 )
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = constant.Constant( 'GL_DEBUG_SOURCE_SHADER_COMPILER_ARB', 0x8248 )
GL_DEBUG_SOURCE_THIRD_PARTY_ARB = constant.Constant( 'GL_DEBUG_SOURCE_THIRD_PARTY_ARB', 0x8249 )
GL_DEBUG_SOURCE_APPLICATION_ARB = constant.Constant( 'GL_DEBUG_SOURCE_APPLICATION_ARB', 0x824A )
GL_DEBUG_SOURCE_OTHER_ARB = constant.Constant( 'GL_DEBUG_SOURCE_OTHER_ARB', 0x824B )
GL_DEBUG_TYPE_ERROR_ARB = constant.Constant( 'GL_DEBUG_TYPE_ERROR_ARB', 0x824C )
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = constant.Constant( 'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB', 0x824D )
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = constant.Constant( 'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB', 0x824E )
GL_DEBUG_TYPE_PORTABILITY_ARB = constant.Constant( 'GL_DEBUG_TYPE_PORTABILITY_ARB', 0x824F )
GL_DEBUG_TYPE_PERFORMANCE_ARB = constant.Constant( 'GL_DEBUG_TYPE_PERFORMANCE_ARB', 0x8250 )
GL_DEBUG_TYPE_OTHER_ARB = constant.Constant( 'GL_DEBUG_TYPE_OTHER_ARB', 0x8251 )
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = constant.Constant( 'GL_MAX_DEBUG_MESSAGE_LENGTH_ARB', 0x9143 )
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = constant.Constant( 'GL_MAX_DEBUG_LOGGED_MESSAGES_ARB', 0x9144 )
GL_DEBUG_LOGGED_MESSAGES_ARB = constant.Constant( 'GL_DEBUG_LOGGED_MESSAGES_ARB', 0x9145 )
GL_DEBUG_SEVERITY_HIGH_ARB = constant.Constant( 'GL_DEBUG_SEVERITY_HIGH_ARB', 0x9146 )
GL_DEBUG_SEVERITY_MEDIUM_ARB = constant.Constant( 'GL_DEBUG_SEVERITY_MEDIUM_ARB', 0x9147 )
GL_DEBUG_SEVERITY_LOW_ARB = constant.Constant( 'GL_DEBUG_SEVERITY_LOW_ARB', 0x9148 )
glDebugMessageControlARB = platform.createExtensionFunction( 
'glDebugMessageControlARB',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLenum,constants.GLsizei,arrays.GLuintArray,constants.GLboolean,),
doc='glDebugMessageControlARB(GLenum(source), GLenum(type), GLenum(severity), GLsizei(count), GLuintArray(ids), GLboolean(enabled)) -> None',
argNames=('source','type','severity','count','ids','enabled',),
deprecated=_DEPRECATED,
)

glDebugMessageInsertARB = platform.createExtensionFunction( 
'glDebugMessageInsertARB',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLuint,constants.GLenum,constants.GLsizei,arrays.GLcharArray,),
doc='glDebugMessageInsertARB(GLenum(source), GLenum(type), GLuint(id), GLenum(severity), GLsizei(length), GLcharArray(buf)) -> None',
argNames=('source','type','id','severity','length','buf',),
deprecated=_DEPRECATED,
)

glDebugMessageCallbackARB = platform.createExtensionFunction( 
'glDebugMessageCallbackARB',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLDEBUGPROCARB,ctypes.c_void_p,),
doc='glDebugMessageCallbackARB(GLDEBUGPROCARB(callback), c_void_p(userParam)) -> None',
argNames=('callback','userParam',),
deprecated=_DEPRECATED,
)

glGetDebugMessageLogARB = platform.createExtensionFunction( 
'glGetDebugMessageLogARB',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLuint, 
argTypes=(constants.GLuint,constants.GLsizei,arrays.GLuintArray,arrays.GLuintArray,arrays.GLuintArray,arrays.GLuintArray,arrays.GLsizeiArray,arrays.GLcharArray,),
doc='glGetDebugMessageLogARB(GLuint(count), GLsizei(bufsize), GLuintArray(sources), GLuintArray(types), GLuintArray(ids), GLuintArray(severities), GLsizeiArray(lengths), GLcharArray(messageLog)) -> constants.GLuint',
argNames=('count','bufsize','sources','types','ids','severities','lengths','messageLog',),
deprecated=_DEPRECATED,
)


def glInitDebugOutputARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
