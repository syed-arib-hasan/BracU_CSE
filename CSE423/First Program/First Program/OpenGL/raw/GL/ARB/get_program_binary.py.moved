'''OpenGL extension ARB.get_program_binary

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_get_program_binary'
_DEPRECATED = False
GL_PROGRAM_BINARY_RETRIEVABLE_HINT = constant.Constant( 'GL_PROGRAM_BINARY_RETRIEVABLE_HINT', 0x8257 )
GL_PROGRAM_BINARY_LENGTH = constant.Constant( 'GL_PROGRAM_BINARY_LENGTH', 0x8741 )
GL_NUM_PROGRAM_BINARY_FORMATS = constant.Constant( 'GL_NUM_PROGRAM_BINARY_FORMATS', 0x87FE )
GL_PROGRAM_BINARY_FORMATS = constant.Constant( 'GL_PROGRAM_BINARY_FORMATS', 0x87FF )
glGetProgramBinary = platform.createExtensionFunction( 
'glGetProgramBinary',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLsizei,arrays.GLsizeiArray,arrays.GLuintArray,ctypes.c_void_p,),
doc='glGetProgramBinary(GLuint(program), GLsizei(bufSize), GLsizeiArray(length), GLuintArray(binaryFormat), c_void_p(binary)) -> None',
argNames=('program','bufSize','length','binaryFormat','binary',),
deprecated=_DEPRECATED,
)

glProgramBinary = platform.createExtensionFunction( 
'glProgramBinary',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,ctypes.c_void_p,constants.GLsizei,),
doc='glProgramBinary(GLuint(program), GLenum(binaryFormat), c_void_p(binary), GLsizei(length)) -> None',
argNames=('program','binaryFormat','binary','length',),
deprecated=_DEPRECATED,
)

glProgramParameteri = platform.createExtensionFunction( 
'glProgramParameteri',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,constants.GLint,),
doc='glProgramParameteri(GLuint(program), GLenum(pname), GLint(value)) -> None',
argNames=('program','pname','value',),
deprecated=_DEPRECATED,
)


def glInitGetProgramBinaryARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
