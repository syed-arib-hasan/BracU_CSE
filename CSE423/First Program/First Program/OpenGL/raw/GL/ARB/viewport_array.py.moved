'''OpenGL extension ARB.viewport_array

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_viewport_array'
_DEPRECATED = False
GL_MAX_VIEWPORTS = constant.Constant( 'GL_MAX_VIEWPORTS', 0x825B )
GL_VIEWPORT_SUBPIXEL_BITS = constant.Constant( 'GL_VIEWPORT_SUBPIXEL_BITS', 0x825C )
GL_VIEWPORT_BOUNDS_RANGE = constant.Constant( 'GL_VIEWPORT_BOUNDS_RANGE', 0x825D )
GL_LAYER_PROVOKING_VERTEX = constant.Constant( 'GL_LAYER_PROVOKING_VERTEX', 0x825E )
GL_VIEWPORT_INDEX_PROVOKING_VERTEX = constant.Constant( 'GL_VIEWPORT_INDEX_PROVOKING_VERTEX', 0x825F )
GL_UNDEFINED_VERTEX = constant.Constant( 'GL_UNDEFINED_VERTEX', 0x8260 )
glViewportArrayv = platform.createExtensionFunction( 
'glViewportArrayv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLsizei,arrays.GLfloatArray,),
doc='glViewportArrayv(GLuint(first), GLsizei(count), GLfloatArray(v)) -> None',
argNames=('first','count','v',),
deprecated=_DEPRECATED,
)

glViewportIndexedf = platform.createExtensionFunction( 
'glViewportIndexedf',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLfloat,constants.GLfloat,constants.GLfloat,constants.GLfloat,),
doc='glViewportIndexedf(GLuint(index), GLfloat(x), GLfloat(y), GLfloat(w), GLfloat(h)) -> None',
argNames=('index','x','y','w','h',),
deprecated=_DEPRECATED,
)

glViewportIndexedfv = platform.createExtensionFunction( 
'glViewportIndexedfv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,arrays.GLfloatArray,),
doc='glViewportIndexedfv(GLuint(index), GLfloatArray(v)) -> None',
argNames=('index','v',),
deprecated=_DEPRECATED,
)

glScissorArrayv = platform.createExtensionFunction( 
'glScissorArrayv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLsizei,arrays.GLintArray,),
doc='glScissorArrayv(GLuint(first), GLsizei(count), GLintArray(v)) -> None',
argNames=('first','count','v',),
deprecated=_DEPRECATED,
)

glScissorIndexed = platform.createExtensionFunction( 
'glScissorIndexed',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLint,constants.GLint,constants.GLsizei,constants.GLsizei,),
doc='glScissorIndexed(GLuint(index), GLint(left), GLint(bottom), GLsizei(width), GLsizei(height)) -> None',
argNames=('index','left','bottom','width','height',),
deprecated=_DEPRECATED,
)

glScissorIndexedv = platform.createExtensionFunction( 
'glScissorIndexedv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,arrays.GLintArray,),
doc='glScissorIndexedv(GLuint(index), GLintArray(v)) -> None',
argNames=('index','v',),
deprecated=_DEPRECATED,
)

glDepthRangeArrayv = platform.createExtensionFunction( 
'glDepthRangeArrayv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLsizei,ctypes.POINTER(constants.GLclampd),),
doc='glDepthRangeArrayv(GLuint(first), GLsizei(count), POINTER(constants.GLclampd)(v)) -> None',
argNames=('first','count','v',),
deprecated=_DEPRECATED,
)

glDepthRangeIndexed = platform.createExtensionFunction( 
'glDepthRangeIndexed',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLclampd,constants.GLclampd,),
doc='glDepthRangeIndexed(GLuint(index), GLclampd(n), GLclampd(f)) -> None',
argNames=('index','n','f',),
deprecated=_DEPRECATED,
)

glGetFloati_v = platform.createExtensionFunction( 
'glGetFloati_v',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,arrays.GLfloatArray,),
doc='glGetFloati_v(GLenum(target), GLuint(index), GLfloatArray(data)) -> None',
argNames=('target','index','data',),
deprecated=_DEPRECATED,
)

glGetDoublei_v = platform.createExtensionFunction( 
'glGetDoublei_v',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,arrays.GLdoubleArray,),
doc='glGetDoublei_v(GLenum(target), GLuint(index), GLdoubleArray(data)) -> None',
argNames=('target','index','data',),
deprecated=_DEPRECATED,
)


def glInitViewportArrayARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
